{ config, pkgs, lib, inputs, ... }:
{
  # System packages
  environment.systemPackages = with pkgs; [
    cryptsetup
    git
    just
    micro
    gitAndTools.git-extras
    gnupg
    pcsclite
    pcsctools
    pgpdump
    pinentry-curses
    pwgen
    gpg-tui ## https://github.com/orhun/gpg-tui
    openssl
    jq
    jc
    glow

    ## step-ca ## Private certificate authority (X.509 & SSH) & ACME server for secure automated certificate management, so you can use TLS everywhere & SSO for SSH
    step-cli ## https://github.com/smallstep/cli - Zero trust swiss army knife for working with X509, OAuth, JWT, OATH OTP, etc

    yubikey-manager
    yubikey-manager-qt
    yubikey-personalization
    age-plugin-yubikey
    piv-agent

    tree
    mc
    dig
  ];

  services.udev.packages = with pkgs; [
    yubikey-personalization
    libu2f-host
  ];

  services.pcscd.enable = true;
  services.yubikey-agent.enable = true;

  programs.gnupg = {
    dirmngr.enable = true;
    agent = {
      enable = true;
      enableSSHSupport = true;
      enableBrowserSocket = true;
      settings = {
        default-cache-ttl = "600";
        max-cache-ttl = "7200";
      };
    };
  };

  programs.zsh = {
    enable = true;
    enableCompletion = true;
    autosuggestions.enable = true;
    syntaxHighlighting.enable = true;
    shellAliases = {
      ll = "ls -la";
    };

    histSize = 10000;
    loginShellInit = "source ~/.env";
  };


  # Keys needed to connect to private github.com repos
  # home.file.".ssh/cowboy-id-ed25519.pub".source = config.lib.file.mkOutOfStoreSymlink "/etc/agenix/ssh/cowboy-id-ed25519.pub";
  # home.file.".ssh/cowboy-id-ed25519".source = config.lib.file.mkOutOfStoreSymlink "/etc/agenix/ssh/cowboy-id-ed25519";


  environment.etc.".ssh/cowboy-id-ed25519.pub".source = "/etc/agenix/ssh/cowboy-id-ed25519.pub";
  environment.etc.".ssh/cowboy-id-ed25519".source = "/etc/agenix/ssh/cowboy-id-ed25519";


  ## SSH agent
  programs.ssh = {
    #enable = true;
    #startAgent=true; ## You can't use ssh-agent and GnuPG agent with SSH support enabled at the same time!

    # All my ssh private key are generated by `ssh-keygen -t ed25519 -a 256 -C "xxx@xxx"`
    # Config format:
    #   Host —  given the pattern used to match against the host name given on the command line.
    #   HostName — specify nickname or abbreviation for host
    #   IdentityFile — the location of your SSH key authentication file for the account.
    # Format in details:
    #   https://www.ssh.com/academy/ssh/config
    ## programs.ssh.extraConfig will allow you to add whatever you want to /etc/ssh/ssh_config
    extraConfig = ''
      AddKeysToAgent yes

      ## Convert keys from SSH2 -> OPENSSH to use them in authorised keys with:
      ## ssh-keygen -i -f /etc/agenix/ssh/pub/ops-id-ed25519.pub

      Host github-cowboy
        # git clone git@github-cowboy:TheCowboyAI/<REPO>.git .
        # test connection with `ssh git@github-cowboy`
        Hostname github.com
        IdentityFile ~/.ssh/cowboy-id-ed25519
        # Specifies that ssh should only use the identity file explicitly configured above
        # required to prevent sending default identity files first.
        IdentitiesOnly yes
        #AddKeysToAgent yes
    '';
  };

}
